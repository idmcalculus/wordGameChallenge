System.register(["./ui-components-legacy-D5H_F7H2.js"],(function(t,e){"use strict";var o,s,n,r,i,a;return{setters:[t=>{o=t.s,s=t.u,n=t.c,r=t.a,i=t.b,a=t.r}],execute:function(){function e(t){clearInterval(t)}const l="https://api.datamuse.com",c=parseInt("5000");async function d(t){try{const e=new AbortController,o=setTimeout((()=>e.abort()),c),s=await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${t.toLowerCase()}`,{signal:e.signal});return clearTimeout(o),s.ok}catch(e){return console.error("Error validating word with Free Dictionary API:",e),!0}}let h=null,u=0;function m(t,e){t.disabled=!0,t.classList.add("cooldown");const o=Date.now();t.dataset.cooldownStartTime=o,t.dataset.cooldownTime=e;const s=document.createElement("div");s.classList.add("cooldown-progress"),t.appendChild(s);const n=setInterval((()=>{const r=Date.now()-o;if(e-r<=0)return clearInterval(n),t.disabled=!1,t.classList.remove("cooldown"),void(s.parentNode===t&&t.removeChild(s));const i=r/e*100;s.style.width=`${i}%`}),50)}function p(){h=null;const t=document.getElementById("letterHintButton"),e=document.getElementById("positionHintButton");t&&t.classList.remove("inactive-hint"),e&&e.classList.remove("inactive-hint"),console.log("Hint button states have been reset")}function w(t){t!==u&&(u=t,h=null,console.log(`Row changed to ${t}, hint type reset`),p())}t("W",class{getLetterHint(){if(!this.currentWord||!this.currentRow)return;const t=Array.from(this.currentRow.getElementsByTagName("input")).filter((t=>!t.value||!this.currentWord.includes(t.value)));if(0===t.length)return;const e=t[Math.floor(Math.random()*t.length)],o=this.getUsedLetters(),s={};for(const a of this.currentWord){const t=a.toLowerCase();s[t]=(s[t]||0)+1}const n={};for(const a of o)n[a]=(n[a]||0)+1;console.log("Word letter counts:",s),console.log("Used letter counts:",n);const r=this.currentWord.split("").filter((t=>{const e=t.toLowerCase();return!o.includes(e)||(s[e]||0)>(n[e]||0)}));if(console.log("Available letters for hint:",r),0===r.length)return;const i=r[Math.floor(Math.random()*r.length)];e.value=i,e.classList.add("hint-provided"),setTimeout((()=>{e.classList.remove("hint-provided")}),2e3)}getPositionHint(){if(!this.currentWord||!this.currentRow)return;const t=Array.from(this.currentRow.getElementsByTagName("input")),e=this.getUsedLetters(),o={};for(const i of this.currentWord){const t=i.toLowerCase();o[t]=(o[t]||0)+1}const s={};for(const i of e)s[i]=(s[i]||0)+1;console.log("Word letter counts:",o),console.log("Used letter counts:",s);const n=[];for(let i=0;i<this.wordLength;i++)if(!t[i].value||t[i].value!==this.currentWord[i]){const t=this.currentWord[i].toLowerCase(),r=o[t]||0,a=s[t]||0;(!e.includes(t)||r>a)&&n.push(i)}if(0===n.length)return;const r=n[Math.floor(Math.random()*n.length)];t[r].value=this.currentWord[r],t[r].classList.add("hint-provided"),setTimeout((()=>{t[r].classList.remove("hint-provided")}),2e3)}getUsedLetters(){const t=[];return document.querySelectorAll(".wrapper input").forEach((e=>{e.value&&""!==e.value.trim()&&t.push(e.value.toLowerCase())})),console.log("Used letters:",t),this.logGameState(),t}logGameState(){console.log("Current word:",this.currentWord),console.log("Current row count:",this.rowCount),document.querySelectorAll(".wrapper .row").forEach(((t,e)=>{const o=Array.from(t.getElementsByTagName("input")).map((t=>t.value||"_")).join("");console.log(`Row ${e+1}: ${o}`)}))}constructor(){this.possibleWords=[],this.alphabet="abcdefghijklmnopqrstuvwxyz".split(""),this.currentWord="",this.currentRow=null,this.attempts=0,this.rowCount=0,this.maximumAttempts=5,this.wordLength="",this.startTime=null,this.timerDisplay=null,this.timerId=null,this.highScores=JSON.parse(localStorage.getItem("highScores"))||[],this.currentScorePage=0,this.scoresPerPage=5,this.init()}init(){const t=document.getElementById("wordLengthInput");t.value=3,t.addEventListener("blur",(function(){let t=parseInt(this.value);isNaN(t)||t<3?this.value=3:t>10&&(this.value=10)})),t.addEventListener("keyup",(function(t){""!==this.value&&"Backspace"!==t.key&&"Delete"!==t.key&&parseInt(this.value)>10&&(this.value=10)})),document.getElementById("startGame").addEventListener("click",(()=>{this.displayHighScores(),this.play()})),document.getElementById("resetGame").addEventListener("click",(()=>{this.resetGame()}))}async play(){var t,e;console.log("play game has been called"),this.startTime=new Date,this.timerDisplay=document.getElementById("timerDisplay"),this.timerId=(t=this.startTime,e=this.timerDisplay,setInterval((()=>{const o=new Date,s=Math.floor((o-t)/1e3);e.textContent=`Time elapsed: ${s} seconds`}),1e3)),document.getElementById("startGame").disabled=!0,document.getElementById("wordLengthInput").disabled=!0,document.getElementById("resetGame").style.display="block";const n=document.getElementById("wordLengthInput").value;if(this.wordLength=parseInt(n),isNaN(this.wordLength)||this.wordLength<3||this.wordLength>10)return void o('<div class="failure-alert">\n        <span class="alert-icon">⚠️</span>\n        <h3>Invalid Input</h3>\n        <p>Please enter a valid number between 3 and 10</p>\n      </div>',null,(()=>{this.resetGame()}),!0);s(this.wordLength);const r="?".repeat(this.wordLength);try{this.possibleWords=await async function(t,e){try{const o=new AbortController,s=setTimeout((()=>o.abort()),c),n=await fetch(`${l}/words?sp=${t}&md=f&max=100`,{signal:o.signal});if(clearTimeout(s),!n.ok)throw new Error(`Network response error: ${n.status}`);const r=(await n.json()).filter((t=>{const o=parseFloat(t.tags?.[0]?.slice(2))||0;return t.word.length===e&&o>.5})).map((t=>t.word.toLowerCase()));if(0===r.length)throw new Error(`No common words of length ${e} found.`);return r}catch(o){throw console.error("Error fetching words:",o),new Error(`Failed to fetch words: ${o.message}`)}}(r,this.wordLength),this.currentWord=this.possibleWords[Math.floor(Math.random()*this.possibleWords.length)],this.createAlphabetContainer(),document.getElementById("alphabetContainer").setAttribute("style","display: grid !important"),this.createRow()}catch(d){console.error("Error:",d),document.getElementById("startGame").disabled=!1,document.getElementById("wordLengthInput").disabled=!1}document.getElementById("gameHeader").innerHTML=`Find the ${this.wordLength} letter word ...`;const i=function(t,e,o,s){const n=document.createElement("div");n.classList.add("hint-buttons-container");const r=document.createElement("button");r.id="letterHintButton",r.classList.add("hint-button","letter-hint"),r.textContent="Letter Reveal",r.dataset.usesLeft=t,r.dataset.cooldownTime=0,r.dataset.hintType="letter",r.title=`Reveals a correct letter (${t} uses available)`;const i=document.createElement("button");return i.id="positionHintButton",i.classList.add("hint-button","position-hint"),i.textContent="Position Reveal",i.dataset.usesLeft=3,i.dataset.cooldownTime=0,i.dataset.hintType="position",i.title="Reveals a correct letter in the correct position (3 uses available)",u=s,h=null,r.addEventListener("click",(()=>{if(r.disabled)return;const o=parseInt(r.dataset.usesLeft);if(o<=0)return;if(s!==u&&w(s),h&&"letter"!==h)return console.log("Cannot use Letter Reveal - Position Reveal already used on this row"),void alert("Only one type of hint can be used per row. You already used Position Reveal on this row.");h="letter";const n=document.getElementById("positionHintButton");n&&n.classList.add("inactive-hint"),e(),r.dataset.usesLeft=o-1,r.title=`Reveals a correct letter (${o-1} uses left)`,m(r,5e3*(t-o+1))})),i.addEventListener("click",(()=>{if(i.disabled)return;const t=parseInt(i.dataset.usesLeft);if(t<=0)return;if(s!==u&&w(s),h&&"position"!==h)return console.log("Cannot use Position Reveal - Letter Reveal already used on this row"),void alert("Only one type of hint can be used per row. You already used Letter Reveal on this row.");h="position";const e=document.getElementById("letterHintButton");e&&e.classList.add("inactive-hint"),o(),i.dataset.usesLeft=t-1,i.title=`Reveals a correct letter in the correct position (${t-1} uses left)`,m(i,6e4)})),n.appendChild(r),n.appendChild(i),n}(this.wordLength,this.getLetterHint.bind(this),this.getPositionHint.bind(this),this.rowCount),a=document.getElementById("resetGame");a.parentNode.insertBefore(i,a),this.rowCount=0}createAlphabetContainer(){n(this.alphabet)}updateAlphabetContainer(t,e){const o=document.getElementById("alphabetContainer");"none"!==o.style.display&&""!==o.style.display||(o.style.display="grid"),r(t,e,this.alphabet)}createRow(){this.currentRow=i(this.wordLength,this.checkRowLetters.bind(this)),document.querySelector(".wrapper").appendChild(this.currentRow),this.rowCount++,this.currentRow.firstChild.focus(),console.log("Row created:",this.rowCount),p(),w(this.rowCount)}async checkRowLetters(){if(console.log("Check row letters called on row "+this.currentRow.id),!this.testIsRowComplete())return;const t=Array.from(this.currentRow.getElementsByTagName("input")),e=t.map((t=>t.value)).join("");if(!(await async function(t){if(!t||""===t.trim())return!1;try{const e=new AbortController,o=setTimeout((()=>e.abort()),c),s=await fetch(`${l}/words?sp=${t.toLowerCase()}&md=f&max=1`,{signal:e.signal});if(clearTimeout(o),!s.ok)throw new Error(`Network response error: ${s.status}`);const n=await s.json();return n.length>0&&n[0].word.toLowerCase()===t.toLowerCase()||await d(t)}catch(e){return console.error("Error validating word with Datamuse:",e),await d(t)}}(e)))return void o(`<div class="invalid-word-alert">\n        <span class="alert-icon">⚠️</span>\n        <h3>Invalid Word</h3>\n        <p>"${e}" is not a valid English word.</p>\n        <p>Please try again with a valid word.</p>\n      </div>`,(()=>{t.forEach((t=>{t.value="",t.classList.remove("correct","contains","notContains")})),t[0].focus()}),(()=>{this.resetGame()}));const s={},n={},r={};for(const o of this.currentWord)n[o]=(n[o]||0)+1;let i=0;for(let o=0;o<this.wordLength;o++){let t=this.currentRow.children[o],e=t.value;e===this.currentWord[o]&&(t.classList.add("correct"),s[o]="correct",r[e]="correct",i++,n[e]--)}for(let o=0;o<this.wordLength;o++){let t=this.currentRow.children[o],e=t.value;"correct"!==s[o]&&(this.currentWord.includes(e)&&n[e]>0?(t.classList.add("contains"),s[o]="contains",r[e]&&"correct"===r[e]||(r[e]="contains"),n[e]--):(t.classList.add("notContains"),s[o]="notContains",r[e]||this.currentWord.includes(e)&&"contains"===r[e]||(r[e]="notContains")))}for(const[o,a]of Object.entries(r))this.updateAlphabetContainer(o,a);Array.from(this.currentRow.children).forEach((t=>t.disabled=!0)),setTimeout((()=>{i===this.wordLength?this.gameWon():this.rowCount+1>=this.maximumAttempts?this.gameLost():(p(),this.createRow())}),100)}testIsRowComplete(){return console.log("Test row complete called on row "+this.currentRow.id),!!this.currentRow&&Array.from(this.currentRow.getElementsByTagName("input")).every((t=>t.value))}gameWon(){console.log(`Game won! player found the word (which was ${this.currentWord})`),e(this.timerId);const t=Math.floor((new Date-this.startTime)/1e3);this.highScores.push({score:t,word:this.currentWord,wordLength:this.wordLength,attempts:this.rowCount+1,date:(new Date).toISOString()}),this.highScores.sort(((t,e)=>{const o="object"==typeof t?t.score:t,s="object"==typeof e?e.score:e;if(o!==s)return o-s;if("object"==typeof t&&"object"==typeof e&&"attempts"in t&&"attempts"in e){if(t.attempts!==e.attempts)return t.attempts-e.attempts;if("date"in t&&"date"in e)return new Date(e.date)-new Date(t.date)}return 0})),localStorage.setItem("highScores",JSON.stringify(this.highScores)),this.currentScorePage=0,this.displayHighScores(),o(`<div class="success-alert">\n      <span class="alert-icon">🎉</span>\n      <h3>Congratulations!</h3>\n      <p>Well done! You solved it in ${t} seconds with ${this.rowCount+1} attempts.</p>\n      <p>The word was: <strong>${this.currentWord}</strong></p>\n    </div>`,null,(()=>{this.resetGame()}))}gameLost(){console.log(`Game Lost! Maximum attempts reached for guessing the word: ${this.currentWord}`),e(this.timerId),o(`<div class="failure-alert">\n      <span class="alert-icon">😕</span>\n      <h3>Game Over</h3>\n      <p>Sorry, you've reached the maximum number of attempts.</p>\n      <p>The word was: <strong>${this.currentWord}</strong></p>\n    </div>`,null,(()=>{this.resetGame()}))}displayHighScores(){const t=document.getElementById("highScoresList");t.innerHTML='<h3 class="highScoresHeader"> Scores </h3>';const e=this.highScores.length;for(let o=0;o<e;o++){const e=this.highScores[o];let s=document.createElement("li");"object"==typeof e?(s.innerHTML=`<span class="score-rank">#${o+1}:</span> <span class="score-time">${e.score} seconds</span> <span class="score-attempts">(${e.attempts} attempts)</span> <span class="score-wordlength">(Word length: ${e.wordLength})</span>`,s.title=`Word: ${e.word}, Length: ${e.wordLength}`):s.textContent=`#${o+1}: ${e} seconds`,t.appendChild(s)}t.style.display="block"}resetGame(){a(),function(){const t=document.querySelector(".hint-buttons-container");t&&t.remove(),h=null,u=0}(),this.rowCount=0,this.currentWord="",this.wordLength="",this.possibleWords=[],this.timerDisplay.style.display="none"}})}}}));
