import{s as t,u as e,c as o,a as n,b as s,r}from"./ui-components-C4CKrEs5.js";function a(t){clearInterval(t)}const i="https://api.datamuse.com",c=parseInt("5000");async function l(t){try{const e=new AbortController,o=setTimeout((()=>e.abort()),c),n=await fetch("https://api.dictionaryapi.dev/api/v2/entries/en/".concat(t.toLowerCase()),{signal:e.signal});return clearTimeout(o),n.ok}catch(e){return console.error("Error validating word with Free Dictionary API:",e),!0}}let d=null,h=0;function u(t,e){t.disabled=!0,t.classList.add("cooldown");const o=Date.now();t.dataset.cooldownStartTime=o,t.dataset.cooldownTime=e;const n=document.createElement("div");n.classList.add("cooldown-progress"),t.appendChild(n);const s=setInterval((()=>{const r=Date.now()-o;if(e-r<=0)return clearInterval(s),t.disabled=!1,t.classList.remove("cooldown"),void(n.parentNode===t&&t.removeChild(n));const a=r/e*100;n.style.width="".concat(a,"%")}),50)}function m(){d=null;const t=document.getElementById("letterHintButton"),e=document.getElementById("positionHintButton");t&&t.classList.remove("inactive-hint"),e&&e.classList.remove("inactive-hint"),console.log("Hint button states have been reset")}function p(t){t!==h&&(h=t,d=null,console.log("Row changed to ".concat(t,", hint type reset")),m())}class w{getLetterHint(){if(!this.currentWord||!this.currentRow)return;const t=Array.from(this.currentRow.getElementsByTagName("input")).filter((t=>!t.value||!this.currentWord.includes(t.value)));if(0===t.length)return;const e=t[Math.floor(Math.random()*t.length)],o=this.getUsedLetters(),n={};for(const i of this.currentWord){const t=i.toLowerCase();n[t]=(n[t]||0)+1}const s={};for(const i of o)s[i]=(s[i]||0)+1;console.log("Word letter counts:",n),console.log("Used letter counts:",s);const r=this.currentWord.split("").filter((t=>{const e=t.toLowerCase();if(!o.includes(e))return!0;return(n[e]||0)>(s[e]||0)}));if(console.log("Available letters for hint:",r),0===r.length)return;const a=r[Math.floor(Math.random()*r.length)];e.value=a,e.classList.add("hint-provided"),setTimeout((()=>{e.classList.remove("hint-provided")}),2e3)}getPositionHint(){if(!this.currentWord||!this.currentRow)return;const t=Array.from(this.currentRow.getElementsByTagName("input")),e=this.getUsedLetters(),o={};for(const a of this.currentWord){const t=a.toLowerCase();o[t]=(o[t]||0)+1}const n={};for(const a of e)n[a]=(n[a]||0)+1;console.log("Word letter counts:",o),console.log("Used letter counts:",n);const s=[];for(let a=0;a<this.wordLength;a++)if(!t[a].value||t[a].value!==this.currentWord[a]){const t=this.currentWord[a].toLowerCase(),r=o[t]||0,i=n[t]||0;(!e.includes(t)||r>i)&&s.push(a)}if(0===s.length)return;const r=s[Math.floor(Math.random()*s.length)];t[r].value=this.currentWord[r],t[r].classList.add("hint-provided"),setTimeout((()=>{t[r].classList.remove("hint-provided")}),2e3)}getUsedLetters(){const t=[];return document.querySelectorAll(".wrapper input").forEach((e=>{e.value&&""!==e.value.trim()&&t.push(e.value.toLowerCase())})),console.log("Used letters:",t),this.logGameState(),t}logGameState(){console.log("Current word:",this.currentWord),console.log("Current row count:",this.rowCount);document.querySelectorAll(".wrapper .row").forEach(((t,e)=>{const o=Array.from(t.getElementsByTagName("input")).map((t=>t.value||"_")).join("");console.log("Row ".concat(e+1,": ").concat(o))}))}constructor(){this.possibleWords=[],this.alphabet="abcdefghijklmnopqrstuvwxyz".split(""),this.currentWord="",this.currentRow=null,this.attempts=0,this.rowCount=0,this.maximumAttempts=5,this.wordLength="",this.startTime=null,this.timerDisplay=null,this.timerId=null,this.highScores=JSON.parse(localStorage.getItem("highScores"))||[],this.currentScorePage=0,this.scoresPerPage=5,this.init()}init(){const t=document.getElementById("wordLengthInput");t.value=3,t.addEventListener("blur",(function(){let t=parseInt(this.value);isNaN(t)||t<3?this.value=3:t>10&&(this.value=10)})),t.addEventListener("keyup",(function(t){if(""===this.value)return;if("Backspace"===t.key||"Delete"===t.key)return;parseInt(this.value)>10&&(this.value=10)})),document.getElementById("startGame").addEventListener("click",(()=>{this.displayHighScores(),this.play()})),document.getElementById("resetGame").addEventListener("click",(()=>{this.resetGame()}))}async play(){var o,n;console.log("play game has been called"),this.startTime=new Date,this.timerDisplay=document.getElementById("timerDisplay"),this.timerId=(o=this.startTime,n=this.timerDisplay,setInterval((()=>{const t=new Date,e=Math.floor((t-o)/1e3);n.textContent="Time elapsed: ".concat(e," seconds")}),1e3)),document.getElementById("startGame").disabled=!0,document.getElementById("wordLengthInput").disabled=!0,document.getElementById("resetGame").style.display="block";const s=document.getElementById("wordLengthInput").value;if(this.wordLength=parseInt(s),isNaN(this.wordLength)||this.wordLength<3||this.wordLength>10)return void t('<div class="failure-alert">\n        <span class="alert-icon">⚠️</span>\n        <h3>Invalid Input</h3>\n        <p>Please enter a valid number between 3 and 10</p>\n      </div>',null,(()=>{this.resetGame()}),!0);e(this.wordLength);const r="?".repeat(this.wordLength);try{this.possibleWords=await async function(t,e){try{const o=new AbortController,n=setTimeout((()=>o.abort()),c),s=await fetch("".concat(i,"/words?sp=").concat(t,"&md=f&max=100"),{signal:o.signal});if(clearTimeout(n),!s.ok)throw new Error("Network response error: ".concat(s.status));const r=(await s.json()).filter((t=>{var o,n;const s=parseFloat(null==(n=null==(o=t.tags)?void 0:o[0])?void 0:n.slice(2))||0;return t.word.length===e&&s>.5})).map((t=>t.word.toLowerCase()));if(0===r.length)throw new Error("No common words of length ".concat(e," found."));return r}catch(o){throw console.error("Error fetching words:",o),new Error("Failed to fetch words: ".concat(o.message))}}(r,this.wordLength),this.currentWord=this.possibleWords[Math.floor(Math.random()*this.possibleWords.length)],this.createAlphabetContainer();document.getElementById("alphabetContainer").setAttribute("style","display: grid !important"),this.createRow()}catch(m){console.error("Error:",m),document.getElementById("startGame").disabled=!1,document.getElementById("wordLengthInput").disabled=!1}document.getElementById("gameHeader").innerHTML="Find the ".concat(this.wordLength," letter word ...");const a=function(t,e,o,n){const s=document.createElement("div");s.classList.add("hint-buttons-container");const r=document.createElement("button");r.id="letterHintButton",r.classList.add("hint-button","letter-hint"),r.textContent="Letter Reveal",r.dataset.usesLeft=t,r.dataset.cooldownTime=0,r.dataset.hintType="letter",r.title="Reveals a correct letter (".concat(t," uses available)");const a=document.createElement("button");return a.id="positionHintButton",a.classList.add("hint-button","position-hint"),a.textContent="Position Reveal",a.dataset.usesLeft=3,a.dataset.cooldownTime=0,a.dataset.hintType="position",a.title="Reveals a correct letter in the correct position (3 uses available)",h=n,d=null,r.addEventListener("click",(()=>{if(r.disabled)return;const o=parseInt(r.dataset.usesLeft);if(o<=0)return;if(n!==h&&p(n),d&&"letter"!==d)return console.log("Cannot use Letter Reveal - Position Reveal already used on this row"),void alert("Only one type of hint can be used per row. You already used Position Reveal on this row.");d="letter";const s=document.getElementById("positionHintButton");s&&s.classList.add("inactive-hint"),e(),r.dataset.usesLeft=o-1,r.title="Reveals a correct letter (".concat(o-1," uses left)"),u(r,5e3*(t-o+1))})),a.addEventListener("click",(()=>{if(a.disabled)return;const t=parseInt(a.dataset.usesLeft);if(t<=0)return;if(n!==h&&p(n),d&&"position"!==d)return console.log("Cannot use Position Reveal - Letter Reveal already used on this row"),void alert("Only one type of hint can be used per row. You already used Letter Reveal on this row.");d="position";const e=document.getElementById("letterHintButton");e&&e.classList.add("inactive-hint"),o(),a.dataset.usesLeft=t-1,a.title="Reveals a correct letter in the correct position (".concat(t-1," uses left)"),u(a,6e4)})),s.appendChild(r),s.appendChild(a),s}(this.wordLength,this.getLetterHint.bind(this),this.getPositionHint.bind(this),this.rowCount),l=document.getElementById("resetGame");l.parentNode.insertBefore(a,l),this.rowCount=0}createAlphabetContainer(){o(this.alphabet)}updateAlphabetContainer(t,e){const o=document.getElementById("alphabetContainer");"none"!==o.style.display&&""!==o.style.display||(o.style.display="grid"),n(t,e,this.alphabet)}createRow(){this.currentRow=s(this.wordLength,this.checkRowLetters.bind(this)),document.querySelector(".wrapper").appendChild(this.currentRow),this.rowCount++,this.currentRow.firstChild.focus(),console.log("Row created:",this.rowCount),m(),p(this.rowCount)}async checkRowLetters(){if(console.log("Check row letters called on row "+this.currentRow.id),!this.testIsRowComplete())return;const e=Array.from(this.currentRow.getElementsByTagName("input")),o=e.map((t=>t.value)).join("");if(!(await async function(t){if(!t||""===t.trim())return!1;try{const e=new AbortController,o=setTimeout((()=>e.abort()),c),n=await fetch("".concat(i,"/words?sp=").concat(t.toLowerCase(),"&md=f&max=1"),{signal:e.signal});if(clearTimeout(o),!n.ok)throw new Error("Network response error: ".concat(n.status));const s=await n.json();return s.length>0&&s[0].word.toLowerCase()===t.toLowerCase()||await l(t)}catch(e){return console.error("Error validating word with Datamuse:",e),await l(t)}}(o))){const n=()=>{e.forEach((t=>{t.value="",t.classList.remove("correct","contains","notContains")})),e[0].focus()},s=()=>{this.resetGame()};return void t('<div class="invalid-word-alert">\n        <span class="alert-icon">⚠️</span>\n        <h3>Invalid Word</h3>\n        <p>"'.concat(o,'" is not a valid English word.</p>\n        <p>Please try again with a valid word.</p>\n      </div>'),n,s)}const n={},s={},r={};for(const t of this.currentWord)s[t]=(s[t]||0)+1;let a=0;for(let t=0;t<this.wordLength;t++){let e=this.currentRow.children[t],o=e.value;o===this.currentWord[t]&&(e.classList.add("correct"),n[t]="correct",r[o]="correct",a++,s[o]--)}for(let t=0;t<this.wordLength;t++){let e=this.currentRow.children[t],o=e.value;"correct"!==n[t]&&(this.currentWord.includes(o)&&s[o]>0?(e.classList.add("contains"),n[t]="contains",r[o]&&"correct"===r[o]||(r[o]="contains"),s[o]--):(e.classList.add("notContains"),n[t]="notContains",r[o]||this.currentWord.includes(o)&&"contains"===r[o]||(r[o]="notContains")))}for(const[t,i]of Object.entries(r))this.updateAlphabetContainer(t,i);Array.from(this.currentRow.children).forEach((t=>t.disabled=!0)),setTimeout((()=>{a===this.wordLength?this.gameWon():this.rowCount+1>=this.maximumAttempts?this.gameLost():(m(),this.createRow())}),100)}testIsRowComplete(){return console.log("Test row complete called on row "+this.currentRow.id),!!this.currentRow&&Array.from(this.currentRow.getElementsByTagName("input")).every((t=>t.value))}gameWon(){console.log("Game won! player found the word (which was ".concat(this.currentWord,")")),a(this.timerId);const e=Math.floor((new Date-this.startTime)/1e3);this.highScores.push({score:e,word:this.currentWord,wordLength:this.wordLength,attempts:this.rowCount+1,date:(new Date).toISOString()}),this.highScores.sort(((t,e)=>{const o="object"==typeof t?t.score:t,n="object"==typeof e?e.score:e;if(o!==n)return o-n;if("object"==typeof t&&"object"==typeof e&&"attempts"in t&&"attempts"in e){if(t.attempts!==e.attempts)return t.attempts-e.attempts;if("date"in t&&"date"in e)return new Date(e.date)-new Date(t.date)}return 0})),localStorage.setItem("highScores",JSON.stringify(this.highScores)),this.currentScorePage=0,this.displayHighScores(),t('<div class="success-alert">\n      <span class="alert-icon">🎉</span>\n      <h3>Congratulations!</h3>\n      <p>Well done! You solved it in '.concat(e," seconds with ").concat(this.rowCount+1," attempts.</p>\n      <p>The word was: <strong>").concat(this.currentWord,"</strong></p>\n    </div>"),null,(()=>{this.resetGame()}))}gameLost(){console.log("Game Lost! Maximum attempts reached for guessing the word: ".concat(this.currentWord)),a(this.timerId),t('<div class="failure-alert">\n      <span class="alert-icon">😕</span>\n      <h3>Game Over</h3>\n      <p>Sorry, you\'ve reached the maximum number of attempts.</p>\n      <p>The word was: <strong>'.concat(this.currentWord,"</strong></p>\n    </div>"),null,(()=>{this.resetGame()}))}displayHighScores(){const t=document.getElementById("highScoresList");t.innerHTML='<h3 class="highScoresHeader"> Scores </h3>';const e=this.highScores.length;for(let o=0;o<e;o++){const e=this.highScores[o];let n=document.createElement("li");"object"==typeof e?(n.innerHTML='<span class="score-rank">#'.concat(o+1,':</span> <span class="score-time">').concat(e.score,' seconds</span> <span class="score-attempts">(').concat(e.attempts,' attempts)</span> <span class="score-wordlength">(Word length: ').concat(e.wordLength,")</span>"),n.title="Word: ".concat(e.word,", Length: ").concat(e.wordLength)):n.textContent="#".concat(o+1,": ").concat(e," seconds"),t.appendChild(n)}t.style.display="block"}resetGame(){r(),function(){const t=document.querySelector(".hint-buttons-container");t&&t.remove(),d=null,h=0}(),this.rowCount=0,this.currentWord="",this.wordLength="",this.possibleWords=[],this.timerDisplay.style.display="none"}}export{w as W};
